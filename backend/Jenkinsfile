pipeline {
    agent any // This can also be a specific Docker agent if desired
    stages {
        stage('Build') {
            steps {
                dir('backend') {
                    echo 'Hello Jenkins from the backend folder'
                    // Add your build steps here, e.g., running npm install or npm build
                }
            }
        }

        stage('Setup') {
            steps {
                script {
                    // Fetch the SonarQube token from credentials
                    env.SONAR_TOKEN = credentials('SONAR') // Replace with your credentials ID for the token
                    env.PROJECT_KEY = 'Test-Project' // Set your actual project key here

                    // Echo the SonarQube project key for debugging (mask token in production)
                    echo "SonarQube Project Key: ${env.PROJECT_KEY}"
                }
            }
        }

        stage('SonarQube Analysis') {
            agent {
                docker {
                    image 'sonarsource/sonar-scanner-cli'
                    args '-v /var/run/docker.sock:/var/run/docker.sock' // Allows access to Docker socket if needed
                }
            }
            steps {
                script {
                    sh """
                    sonar-scanner \
                    -Dsonar.host.url=http://localhost:9000 \
                    -Dsonar.login=${SONAR_TOKEN} \
                    -Dsonar.projectKey=${PROJECT_KEY} \
                    -Dsonar.sources=./backend
                    """
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
